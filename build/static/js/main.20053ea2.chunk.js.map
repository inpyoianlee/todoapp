{"version":3,"sources":["components/Header.jsx","api/index.js","components/Todoitem.jsx","components/Addnewitem.jsx","index.js"],"names":["Header","Box","display","alignItems","Typography","variant","BASE","getTodoitems","a","axios","get","data","postTodoitem","name","isComplete","startDate","endDate","post","putTodoitem","id","put","deleteTodoitem","delete","datestring","date","getDay","getMonth","getDate","getFullYear","Todoitem","start","Date","end","startString","endString","useState","complete","setComplete","edit","setEdit","newName","setNewName","startMonth","setStartMonth","startDay","setStartDay","startYear","setStartYear","newStartDate","setNewStartdate","endMonth","setEndMonth","endDay","setEndDay","endYear","setEndYear","newEndDate","setNewEndDate","flexDirection","border","width","padding","sx","textDecoration","fontWeight","component","TextField","value","onChange","e","target","select","helperText","defaultValue","MenuItem","Button","onClick","preventDefault","newStartString","newEndString","confirm","console","error","FormGroup","FormControlLabel","control","Checkbox","label","checked","window","location","reload","color","Addnewitem","defaultDate","addBool","setAddBool","alert","App","todoitems","setTodoitems","allTodoitems","useEffect","getAllTodoitems","height","CssBaseline","map","item","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.20053ea2.chunk.js","sourcesContent":["import { Box, Typography } from '@mui/material';\r\nimport React from 'react'\r\n\r\nconst Header = () => {\r\n    return (\r\n        <Box display='flex' alignItems='center'>\r\n            <Typography variant='h4'>To Do Application</Typography>\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport default Header;","import axios from 'axios';\r\n\r\nconst BASE = 'https://todoappapi20221014105850.azurewebsites.net/api'\r\n\r\nexport async function getTodoitems() {\r\n  try {\r\n    const { data } = await axios.get(`${ BASE }/todoitems`);\r\n    return data;\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n}\r\n\r\nexport async function postTodoitem(name, isComplete = false, startDate, endDate) {\r\n  try {\r\n    await axios.post(`${ BASE }/todoitems`, {name, isComplete, startDate, endDate})\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n}\r\n\r\nexport async function putTodoitem(id, name, isComplete, startDate, endDate) {\r\n  try {\r\n    await axios.put(`${ BASE }/todoitems/${id}`, {id, name, isComplete, startDate, endDate});\r\n  } catch(error) {\r\n    throw error;\r\n  }\r\n}\r\n\r\nexport async function deleteTodoitem(id) {\r\n  try {\r\n    await axios.delete(`${ BASE }/todoitems/${id}`);\r\n  } catch(error) {\r\n    throw error;\r\n  }\r\n}","import { React, useState } from \"react\";\r\nimport { Box, Checkbox, Typography, FormGroup, FormControlLabel, Button, TextField, MenuItem } from \"@mui/material\";\r\nimport { putTodoitem, deleteTodoitem } from '../api'\r\n\r\nfunction datestring(date) {\r\n    const monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\r\n    const dayNames = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\r\n    let returnString = dayNames[date.getDay()] + ', ' + monthNames[date.getMonth()] + ' ' + date.getDate() + ', ' + date.getFullYear();\r\n    return returnString\r\n}\r\n\r\nexport default function Todoitem({id, name, isComplete, startDate, endDate}) {\r\n    const start = new Date(startDate);\r\n    const end = new Date(endDate);\r\n    const startString = datestring(start)\r\n    const endString = datestring(end)\r\n\r\n    // hook for whether the item is complete or not\r\n    const [complete, setComplete] = useState(isComplete);\r\n    // boolean that is true when user is trying to edit a todo item\r\n    const [edit, setEdit] = useState(false);\r\n\r\n    const [newName, setNewName] = useState(name);\r\n    // hooks for start date\r\n    const [startMonth, setStartMonth] = useState(start.getMonth());\r\n    const [startDay, setStartDay] = useState(start.getDay());\r\n    const [startYear, setStartYear] = useState(start.getFullYear());\r\n    const [newStartDate, setNewStartdate] = useState(startString)\r\n\r\n    const [endMonth, setEndMonth] = useState(start.getMonth());\r\n    const [endDay, setEndDay] = useState(start.getDay());\r\n    const [endYear, setEndYear] = useState(start.getFullYear());\r\n    const [newEndDate, setNewEndDate] = useState(endString);\r\n\r\n\r\n    if (edit) {\r\n        return (\r\n            <Box display='flex' flexDirection='column' border='1px solid black' width='50%' padding='15px' alignItems='space'>\r\n                <Typography variant='h6' sx={{textDecoration: 'underline', fontWeight: 'bold'}}>Edit To do</Typography>\r\n                <Box component='form'>\r\n                    <Typography variant=\"body1\" sx={{textDecoration: 'underline'}}>To do item</Typography>\r\n                    <TextField variant=\"outlined\" value={newName} onChange={(e) => setNewName(e.target.value)}/>\r\n                    <Typography variant=\"body1\" sx={{textDecoration: 'underline'}}>Start Date</Typography>\r\n                    <Box display='flex'>\r\n                        <TextField select helperText='Month' defaultValue={startMonth} onChange={(e) => setStartMonth(e.target.value)}>\r\n                            <MenuItem key='January' value={1}>January</MenuItem>\r\n                            <MenuItem key='February' value={2}>February</MenuItem>\r\n                            <MenuItem key='March' value={3}>March</MenuItem>\r\n                            <MenuItem key='April' value={4}>April</MenuItem>\r\n                            <MenuItem key='May' value={5}>May</MenuItem>\r\n                            <MenuItem key='June' value={6}>June</MenuItem>\r\n                            <MenuItem key='July' value={7}>July</MenuItem>\r\n                            <MenuItem key='August' value={8}>August</MenuItem>\r\n                            <MenuItem key='September' value={9}>September</MenuItem>\r\n                            <MenuItem key='October' value={10}>October</MenuItem>\r\n                            <MenuItem key='November' value={11}>November</MenuItem>\r\n                            <MenuItem key='December' value={12}>December</MenuItem>\r\n                        </TextField>\r\n                        <TextField helperText='Day' sx={{width: '70px'}} value={startDay} onChange={(e) => setStartDay(e.target.value)}/>\r\n                        <TextField helperText='Year' sx={{width: '100px'}} value={startYear} onChange={(e) => setStartYear(e.target.value)}/>\r\n                    </Box>\r\n                    <Typography variant=\"body1\" sx={{textDecoration: 'underline'}}>End Date</Typography>\r\n                    <Box display='flex'>\r\n                        <TextField select helperText='Month' defaultValue={endMonth} onChange={(e) => setEndMonth(e.target.value)}>\r\n                            <MenuItem key='January' value={1}>January</MenuItem>\r\n                            <MenuItem key='February' value={2}>February</MenuItem>\r\n                            <MenuItem key='March' value={3}>March</MenuItem>\r\n                            <MenuItem key='April' value={4}>April</MenuItem>\r\n                            <MenuItem key='May' value={5}>May</MenuItem>\r\n                            <MenuItem key='June' value={6}>June</MenuItem>\r\n                            <MenuItem key='July' value={7}>July</MenuItem>\r\n                            <MenuItem key='August' value={8}>August</MenuItem>\r\n                            <MenuItem key='September' value={9}>September</MenuItem>\r\n                            <MenuItem key='October' value={10}>October</MenuItem>\r\n                            <MenuItem key='November' value={11}>November</MenuItem>\r\n                            <MenuItem key='December' value={12}>December</MenuItem>\r\n                        </TextField>\r\n                        <TextField helperText='Day' sx={{width: '70px'}} value={endDay} onChange={(e) => setEndDay(e.target.value)}/>\r\n                        <TextField helperText='Year' sx={{width: '100px'}} value={endYear} onChange={(e) => setEndYear(e.target.value)}/>\r\n                    </Box>\r\n                    <Button variant='outlined' onClick={async (e) => {\r\n                        e.preventDefault();\r\n                        const newStartString = new Date(startMonth + '-' + startDay + '-' + startYear);\r\n                        const newEndString = new Date(endMonth + '-' + endDay + '-' + endYear)\r\n                        setNewStartdate(datestring(newStartString));\r\n                        setNewEndDate(datestring(newEndString));\r\n                        let result = confirm(\"Are you sure you want to edit this item?\")\r\n                        if (result) {\r\n                            try {\r\n                                await putTodoitem(id, newName, complete, newStartString, newEndString);\r\n                                setEdit(false);\r\n                            } catch (error) {\r\n                                console.error(error);\r\n                            }\r\n                        }\r\n                    }}>Submit</Button>\r\n                </Box>\r\n            </Box>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <Box display='flex' flexDirection='column' border='1px solid black' width='50%' padding='15px' alignItems='space'>\r\n            <Typography variant='h6' sx={{textDecoration: 'underline', fontWeight: 'bold'}}>{newName}</Typography>\r\n            <Typography variant='h6' sx={{textDecoration: 'underline'}}>Start Time:</Typography><Typography variant=\"subtitle1\">{newStartDate}</Typography>\r\n            <Typography variant='h6' sx={{textDecoration: 'underline'}}>End Time:</Typography><Typography variant=\"subtitle1\">{newEndDate}</Typography>\r\n            <Box display='flex' alignItems='space-between'>\r\n                <FormGroup>\r\n                    <FormControlLabel control={<Checkbox />} label=\"Complete\" checked={ complete } onClick={(e) => setComplete(!complete)}/>\r\n                </FormGroup>\r\n                <Button variant='contained' onClick={() => setEdit(true) }>Edit</Button>\r\n                <Button variant='contained' onClick={async (e) => {\r\n                    e.preventDefault();\r\n                    let result = confirm(\"Are you sure you want to delete this item?\")\r\n                    if (result) {\r\n                        try {\r\n                            await deleteTodoitem(id);\r\n                            window.location.reload(false);\r\n                        }catch (error) {\r\n                            console.error(error);\r\n                        }\r\n                    }\r\n                }} color='error'>Delete</Button>\r\n            </Box>\r\n        </Box>\r\n    )\r\n}","import { Box, Typography, Button, TextField, MenuItem } from \"@mui/material\";\r\nimport { React, useState } from \"react\";\r\nimport { postTodoitem } from '../api';\r\n\r\nfunction datestring(date) {\r\n    const monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\r\n    const dayNames = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\r\n    let returnString = dayNames[date.getDay()] + ', ' + monthNames[date.getMonth()] + ' ' + date.getDate() + ', ' + date.getFullYear();\r\n    return returnString\r\n}\r\n\r\nconst Addnewitem = () => {\r\n    const defaultDate = new Date();\r\n\r\n    const [addBool, setAddBool] = useState(false);\r\n    const [newName, setNewName] = useState('');\r\n\r\n    const [startMonth, setStartMonth] = useState(defaultDate.getMonth())\r\n    const [startDay, setStartDay] = useState(defaultDate.getDay())\r\n    const [startYear, setStartYear] = useState(defaultDate.getFullYear())\r\n\r\n    const [endMonth, setEndMonth] = useState(defaultDate.getMonth())\r\n    const [endDay, setEndDay] = useState(defaultDate.getDay())\r\n    const [endYear, setEndYear] = useState(defaultDate.getFullYear())\r\n\r\n\r\n    if (addBool) {\r\n        return (\r\n            <Box display='flex' flexDirection='column' border='1px solid black' width='50%' padding='15px' alignItems='space'>\r\n                <Typography variant='h6' sx={{textDecoration: 'underline', fontWeight: 'bold'}}>Add new to do item</Typography>\r\n                <Box component='form'>\r\n                    <Typography variant=\"body1\" sx={{textDecoration: 'underline'}}>To do item</Typography>\r\n                    <TextField variant=\"outlined\" value={newName} onChange={(e) => setNewName(e.target.value)}/>\r\n                    <Typography variant=\"body1\" sx={{textDecoration: 'underline'}}>Start Date</Typography>\r\n                    <Box display='flex'>\r\n                        <TextField select helperText='Month' defaultValue={startMonth} onChange={(e) => setStartMonth(e.target.value)}>\r\n                            <MenuItem key='January' value={1}>January</MenuItem>\r\n                            <MenuItem key='February' value={2}>February</MenuItem>\r\n                            <MenuItem key='March' value={3}>March</MenuItem>\r\n                            <MenuItem key='April' value={4}>April</MenuItem>\r\n                            <MenuItem key='May' value={5}>May</MenuItem>\r\n                            <MenuItem key='June' value={6}>June</MenuItem>\r\n                            <MenuItem key='July' value={7}>July</MenuItem>\r\n                            <MenuItem key='August' value={8}>August</MenuItem>\r\n                            <MenuItem key='September' value={9}>September</MenuItem>\r\n                            <MenuItem key='October' value={10}>October</MenuItem>\r\n                            <MenuItem key='November' value={11}>November</MenuItem>\r\n                            <MenuItem key='December' value={12}>December</MenuItem>\r\n                        </TextField>\r\n                        <TextField helperText='Day' sx={{width: '70px'}} value={startDay} onChange={(e) => setStartDay(e.target.value)}/>\r\n                        <TextField helperText='Year' sx={{width: '100px'}} value={startYear} onChange={(e) => setStartYear(e.target.value)}/>\r\n                    </Box>\r\n                    <Typography variant=\"body1\" sx={{textDecoration: 'underline'}}>End Date</Typography>\r\n                    <Box display='flex'>\r\n                        <TextField select helperText='Month' defaultValue={endMonth} onChange={(e) => setEndMonth(e.target.value)}>\r\n                            <MenuItem key='January' value={1}>January</MenuItem>\r\n                            <MenuItem key='February' value={2}>February</MenuItem>\r\n                            <MenuItem key='March' value={3}>March</MenuItem>\r\n                            <MenuItem key='April' value={4}>April</MenuItem>\r\n                            <MenuItem key='May' value={5}>May</MenuItem>\r\n                            <MenuItem key='June' value={6}>June</MenuItem>\r\n                            <MenuItem key='July' value={7}>July</MenuItem>\r\n                            <MenuItem key='August' value={8}>August</MenuItem>\r\n                            <MenuItem key='September' value={9}>September</MenuItem>\r\n                            <MenuItem key='October' value={10}>October</MenuItem>\r\n                            <MenuItem key='November' value={11}>November</MenuItem>\r\n                            <MenuItem key='December' value={12}>December</MenuItem>\r\n                        </TextField>\r\n                        <TextField helperText='Day' sx={{width: '70px'}} value={endDay} onChange={(e) => setEndDay(e.target.value)}/>\r\n                        <TextField helperText='Year' sx={{width: '100px'}} value={endYear} onChange={(e) => setEndYear(e.target.value)}/>\r\n                    </Box>\r\n                    <Button variant='outlined' onClick={async (e) => {\r\n                        e.preventDefault();\r\n                        const newStartString = new Date(startMonth + '-' + startDay + '-' + startYear);\r\n                        const newEndString = new Date(endMonth + '-' + endDay + '-' + endYear)\r\n                        try {\r\n                            await postTodoitem(newName, false, newStartString, newEndString);\r\n                            setAddBool(false);\r\n                        } catch (error) {\r\n                            console.error(error);\r\n                        }\r\n\r\n                        alert('Item succesfully added!')\r\n                        window.location.reload(false);\r\n                    }}>Submit</Button>\r\n                </Box>\r\n            </Box>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <Button variant='contained' onClick={() => setAddBool(true)}>Add to do item</Button>\r\n    )\r\n\r\n}\r\n\r\nexport default Addnewitem;","import React, { useState, useEffect } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Addnewitem, Header, Todoitem} from './components'\r\nimport { BrowserRouter as Router, Route, Switch, Redirect} from \"react-router-dom\";\r\nimport { Box, CssBaseline, Grid } from '@mui/material';\r\nimport { getTodoitems } from './api'\r\n\r\nconst App = () => {\r\n  const [todoitems, setTodoitems] = useState([])\r\n\r\n  async function getAllTodoitems() {\r\n    try {\r\n      const allTodoitems = await getTodoitems();\r\n      setTodoitems(allTodoitems);\r\n    } catch(error) {\r\n      console.error(error)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    getAllTodoitems();\r\n  }, [])\r\n\r\n  return (\r\n    <Box display='flex' flexDirection='column' alignItems='center' width='100%' height='100%'>\r\n      <CssBaseline />\r\n      <Header />\r\n      {todoitems.map(item => {\r\n        return <Todoitem id={item.id} name={item.name} isComplete={item.isComplete} startDate={item.startDate} endDate={item.endDate}/>\r\n      })}\r\n      <Addnewitem />\r\n    </Box>\r\n  );\r\n};\r\n\r\nReactDOM.render(\r\n  <Router>\r\n    <App />\r\n  </Router>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}